import heapq as h
G=(1,2,3,4,5,6,7,8,0)
H=lambda s:sum(abs((v-1)//3-i)+abs((v-1)%3-j)for i in range(3)for j in range(3)if(v:=s[i*3+j]))
def N(s):
 z=s.index(0);x,y=divmod(z,3)
 for dx,dy in[(-1,0),(1,0),(0,-1),(0,1)]:
  nx,ny=x+dx,y+dy
  if 0<=nx<3>ny>=0:
   t=list(s);nz=nx*3+ny;t[z],t[nz]=t[nz],t[z];yield tuple(t)
def S(st):
 q=[(H(st),0,st)];v=set()
 while q:
  f,g,s=h.heappop(q)
  if s==G:return g
  if s in v:continue;v.add(s)
  for ns in N(s):h.heappush(q,(g+1+H(ns),g+1,ns))
print(S((1,2,3,4,0,6,7,5,8)))
output
Solution found in 2 moves:

1 2 3
4   6
7 5 8
------
1 2 3
4 5 6
7   8
------
1 2 3
4 5 6
7 8 
